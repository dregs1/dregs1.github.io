<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="CommonRootView">
		<!--all content-->
		<control type="group">
		<include>VisibleFadeEffect</include>
		<left>30</left>
		<control type="image">
		    <left>-2</left>
		    <top>17</top>
		    <width>98.6%</width>
		    <height>10.6%</height>
		    <texture>homeshadow_1.png</texture>
		  </control>
		<control type="image">
		    <left>0</left>
		    <top>20</top>
		    <width>98.4%</width>
		    <height>10%</height>
		    <texture colordiffuse="black">backgrounds/bg_fade_2.png</texture>
			<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/bg_fade_3.png</bordertexture>
			<bordersize>2</bordersize>
		  </control>
		 <control type="image">
		    <left>-2</left>
		    <top>164</top>
		    <width>98.6%</width>
		    <height>69.5%</height>
		    <texture>homeshadow_2.png</texture>
		 </control>
		<control type="image">
		    <left>0</left>
		    <top>167</top>
		    <width>98.4%</width>
		    <height>69%</height>
		    <texture colordiffuse="black">backgrounds/bg_fade_2.png</texture>
			<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/bg_fade_3.png</bordertexture>
			<bordersize>2</bordersize>
		 </control>
		 <control type="image">
		    <left>-2</left>
		    <top>947</top>
		    <width>98.6%</width>
		    <height>10.6%</height>
		    <texture>homeshadow_1.png</texture>
		  </control>
		<control type="image">
		    <left>0</left>
		    <top>950</top>
		    <width>98.4%</width>
		    <height>10%</height>
		    <texture colordiffuse="black">backgrounds/bg_fade_2.png</texture>
			<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/bg_fade_3.png</bordertexture>
			<bordersize>2</bordersize>
		  </control>
	    </control>
		<!--all content-->
		<control type="group">
			<visible>Control.IsVisible(50)</visible>
			<include>VisibleFadeEffect</include>
			<include condition="String.IsEqual(Skin.AspectRatio,4:3)">TallListContainer</include>
			<include condition="!String.IsEqual(Skin.AspectRatio,4:3)">ShortListContainer</include>
			<left>23.7%</left>
			<width>1391</width>
			<!--thumb (fallback)-->
			<control type="image">
				<left>-403</left>
			    <top>0</top>
			    <width>490</width>
				<height>700</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black" background="true">$VAR[PosterThumb]</texture>
				<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/poster shadow.png</bordertexture>
				<bordersize>10</bordersize>
				<visible>String.Contains(ListItem.Icon,Default) + String.Contains(ListItem.Art(poster),Default)</visible>
			</control>
			<!--thumb (no fallback)-->
			<control type="image">
			    <left>-403</left>
			    <top>0</top>
				<width>490</width>
				<height>700</height>
				<aspectratio aligny="center">stretch</aspectratio>
				<texture background="true">$VAR[PosterThumb]</texture>
				<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/poster shadow.png</bordertexture>
				<bordersize>10</bordersize>
				<visible>!String.Contains(ListItem.Icon,Default) | !String.Contains(ListItem.Art(poster),Default)</visible>
				<visible>!Container.Content(Episodes)</visible>
			</control>
			<!--content list-->
			<control type="list" id="50">
				<include condition="String.IsEqual(Skin.AspectRatio,4:3)">TallListSlide</include>
				<include condition="!String.IsEqual(Skin.AspectRatio,4:3)">ShortListSlide</include>
				<visible>!Container.Content(Episodes)</visible>
				<top>5</top>
				<left>100</left>
				<width>1364</width>
				<onleft>2</onleft>
				<onright>651</onright>
				<onup>50</onup>
				<ondown>50</ondown>
				<viewtype label="535">list</viewtype>
				<pagecontrol>651</pagecontrol>
				<scrolltime>200</scrolltime>
				<itemlayout height="100" width="1474">
					<!--background-->
					<control type="image">
						<left>4</left>
						<top>0</top>
						<width>1300</width>
						<height>90</height>
						<texture colordiffuse="FF2E2E2E">backgrounds/bg_fade_7.png</texture>
				        <bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/bg_fade_3.png</bordertexture>
				        <bordersize>2</bordersize>
					</control>
					<!--main label-->
					<control type="label">
						<left>35</left>
						<top>10</top>
						<width>1265</width>
						<height>70</height>
						<font>breadcrumb</font>
						<textcolor>white</textcolor>
						<shadowcolor>black</shadowcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<!--secondary label (non videos)-->
					<control type="label">
						<left>690</left>
						<top>25</top>
						<width>600</width>
						<height>60</height>
						<font>secondary.info</font>
						<textcolor>white</textcolor>
						<selectedcolor>$INFO[Skin.String(color.500)]</selectedcolor>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label2]</label>
						<visible>!Window.IsVisible(Videos)</visible>
					</control>
					<!--secondary label (videos)-->
					<control type="label">
						<left>690</left>
						<top>25</top>
						<width>600</width>
						<height>60</height>
						<font>secondary.info</font>
						<textcolor>white</textcolor>
						<selectedcolor>$INFO[Skin.String(color.500)]</selectedcolor>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label2]</label>
						<visible>Window.IsVisible(Videos)</visible>
						<animation effect="slide" start="0,0" end="2,0" delay="0" time="0" condition="![Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos)]">conditional</animation>
					</control>
					<!--hd/sd flag-->
					<control type="image">
						<left>1175</left>
						<top>10</top>
						<width>56</width>
						<height>40</height>
						<texture>$INFO[ListItem.VideoResolution,flagging/lists/,.png]</texture>
						<visible>Window.IsVisible(Videos) + [Container.Content(Movies) | Container.Content(MusicVideos)]</visible>
						<visible>!ListItem.IsStereoscopic</visible>
					</control>
					<!--3d flag-->
					<control type="image">
						<left>1218</left>
						<top>30</top>
						<width>56</width>
						<height>40</height>
						<texture>flagging/lists/3D.png</texture>
						<visible>Window.IsVisible(Videos) + [Container.Content(Movies) | Container.Content(MusicVideos)]</visible>
						<visible>ListItem.IsStereoscopic</visible>
					</control>
					<!--watched icon-->
					<control type="image">
						<left>1265</left>
						<top>10</top>
						<width>30</width>
						<height>25</height>
						<texture colordiffuse="white">$INFO[ListItem.Overlay]</texture>
						<visible>Window.IsVisible(Videos) + !ListItem.IsResumable</visible>
					</control>
					<!--secondary label (videos)-->
					<control type="image">
						<left>1265</left>
						<top>10</top>
						<width>30</width>
						<height>25</height>
						<texture colordiffuse="white">OverlayWatching.png</texture>
						<visible>Window.IsVisible(Videos) + ListItem.IsResumable</visible>
					</control>
				</itemlayout>
				<focusedlayout height="100" width="1474">
					<!--background-->
					<control type="image">
						<left>4</left>
						<top>0</top>
						<width>1300</width>
						<height>90</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</texture>
						<animation effect="fade" start="100" end="75" time="200" condition="Control.HasFocus(60)">Conditional</animation>
					</control>
					<!--main label-->
					<control type="label">
						<left>35</left>
						<top>10</top>
						<width>1265</width>
						<height>70</height>
						<font>breadcrumb</font>
						<textcolor>white</textcolor>
						<shadowcolor>black</shadowcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<!--secondary label (non videos)-->
					<control type="label">
						<left>690</left>
						<top>25</top>
						<width>600</width>
						<height>60</height>
						<font>secondary.info</font>
						<textcolor>white</textcolor>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label2]</label>
						<visible>!Window.IsVisible(Videos)</visible>
					</control>
					<!--secondary label (videos)-->
					<control type="label">
						<left>690</left>
						<top>25</top>
						<width>600</width>
						<height>60</height>
						<font>secondary.info</font>
						<textcolor>white</textcolor>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label2]</label>
						<visible>Window.IsVisible(Videos)</visible>
						<animation effect="slide" start="0,0" end="2,0" delay="0" time="0" condition="![Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos)]">conditional</animation>
					</control>
					<!--hd/sd flag-->
					<control type="image">
						<left>1175</left>
						<top>10</top>
						<width>56</width>
						<height>40</height>
						<texture>$INFO[ListItem.VideoResolution,flagging/lists/,.png]</texture>
						<visible>Window.IsVisible(Videos) + [Container.Content(Movies) | Container.Content(MusicVideos)]</visible>
						<visible>!ListItem.IsStereoscopic</visible>
					</control>
					<!--3d flag-->
					<control type="image">
						<left>1218</left>
						<top>30</top>
						<width>56</width>
						<height>40</height>
						<texture>flagging/lists/3D.png</texture>
						<visible>Window.IsVisible(Videos) + [Container.Content(Movies) | Container.Content(MusicVideos)]</visible>
						<visible>ListItem.IsStereoscopic</visible>
					</control>
					<!--watched icon-->
					<control type="image">
						<left>1265</left>
						<top>10</top>
						<width>30</width>
						<height>25</height>
						<texture colordiffuse="white">$INFO[ListItem.Overlay]</texture>
						<visible>Window.IsVisible(Videos) + !ListItem.IsResumable</visible>
					</control>
					<!--resumable icon-->
					<control type="image">
						<left>1265</left>
						<top>10</top>
						<width>30</width>
						<height>25</height>
						<texture colordiffuse="white">OverlayWatching.png</texture>
						<visible>Window.IsVisible(Videos) + ListItem.IsResumable</visible>
					</control>
				</focusedlayout>
			  </control>
		    <control type="label">
			  <visible>Container.Content(Movies) | Container.Content(Tvshows)</visible>
				 <left>130</left>
				 <top>775</top>
				 <width>680</width>
				 <height>92</height>
				 <font>label</font>
				 <textcolor>white</textcolor>
				 <align>center</align>
				 <aligny>center</aligny>
				 <label>$INFO[ListItem.Genre]</label>
				 <scroll>true</scroll>
			 </control>
			 <control type="label">
			<visible>Window.IsVisible(MusicPlaylist) |  Container.Content(Songs) | Container.Content(Albums)</visible>
				 <left>130</left>
				 <top>775</top>
				 <width>680</width>
				 <height>92</height>
				 <font>label</font>
				 <textcolor>white</textcolor>
				 <align>center</align>
				 <aligny>center</aligny>
				 <label>$INFO[ListItem.Genre]</label>
				 <scroll>true</scroll>
				 <visible>!Container.Content(Movies) | Container.Content(Tvshows)</visible>
			 </control>		
			 <control type="label">
			  <visible>Container.Content(Tvshows) | Container.Content(Seasons)</visible>
				 <left>-80</left>
				 <top>800</top>
				 <width>900</width>
				 <height>92</height>
				 <font>label</font>
				 <textcolor>white</textcolor>
				 <align>left</align>
				 <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Season,[COLOR ffefb415]Seasons: [/COLOR]]</label>
				 <visible>Container.Content(TVShows) | Container.Content(Seasons)</visible>
				 <scroll>true</scroll>
			 </control>
			 <control type="label">
			 <visible>Container.Content(Seasons)</visible>
			     <left>124</left>
				 <top>797</top>
				 <width>680</width>
				 <height>35</height>
				 <font>font13</font>
				 <align>center</align>
				 <aligny>center</aligny>
				 <textcolor>white</textcolor>
				 <shadowcolor>black</shadowcolor>
				 <label>$INFO[ListItem.Studio]</label>
				 <visible>!Container.Content(Episodes)</visible>
			  </control>
			 <control type="label">
			  <visible>Container.Content(Tvshows) | Container.Content(Seasons)</visible>
				 <left>905</left>
				 <top>800</top>
				 <width>900</width>
				 <height>92</height>
				 <font>label</font>
				 <textcolor>white</textcolor>
				 <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Episode,[COLOR ffefb415]Episodes: [/COLOR]]</label>
				 <visible>Container.Content(Seasons) | Container.Content(TVShows)</visible>
				 <scroll>true</scroll>
			 </control>
			<!--scrollbar-->
			<control type="scrollbar" id="651">
			    <top>9</top>
				<left>1416</left>
				<bottom>10</bottom>
				<onleft>50</onleft>
				<onright>2</onright>
				<orientation>vertical</orientation>
			</control>
		</control>
	 </include> 
	<include name="ThumbnailView">
			<!--all content-->
		<control type="group">
			<visible>Control.IsVisible(500)</visible>
			<include>VisibleFadeEffect</include>
			<include condition="String.IsEqual(Skin.AspectRatio,4:3)">TallListContainer</include>
			<include condition="!String.IsEqual(Skin.AspectRatio,4:3)">ShortListContainer</include>
			<centerleft>50%</centerleft>
			<width>1900</width>
			<!--content list-->
			<control type="panel" id="500">
				<include condition="String.IsEqual(Skin.AspectRatio,4:3)">TallListContainer</include>
				<include condition="!String.IsEqual(Skin.AspectRatio,4:3)">ShortListContainer</include>
				<visible>!Container.Content(Episodes)</visible>
				<left>58</left>
				<right>12</right>
				<onleft>2</onleft>
				<onright>600</onright>
				<onup>500</onup>
				<ondown>500</ondown>
				<viewtype label="21371">list</viewtype>
				<pagecontrol>600</pagecontrol>
				<scrolltime>200</scrolltime>
				<preloaditems>2</preloaditems>
				<itemlayout condition="!Container.Content(Movies) + !Container.Content(Seasons) + !Container.Content(TVShows) + !Container.Content(Sets)" height="233.3" width="253">
					<!--background (fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>233</width>
						<height>221</height>
						<texture background="true" colordiffuse="black">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/square shadow small.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>233</width>
						<height>221</height>
						<texture background="true" colordiffuse="black">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/square shadow small.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--background (no fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>233</width>
						<height>221</height>
						<texture background="true" colordiffuse="button.nf">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/square shadow small.png</bordertexture>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--icon (fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>scale</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(color.500)]" background="true">$INFO[Listitem.Icon]</texture>
						<visible>!Container.Content(Episodes)</visible>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--icon (no fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>scale</aspectratio>
						<texture background="true">$INFO[Listitem.Icon]</texture>
						<visible>!Container.Content(Episodes)</visible>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--episode thumb (fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(color.500)]" background="true">$INFO[Listitem.Icon]</texture>
						<visible>Container.Content(Episodes)</visible>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--episode thumb (no fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Listitem.Icon]</texture>
						<visible>Container.Content(Episodes)</visible>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--overlay background-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>35</width>
						<height>35</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable</visible>
					</control>
					<!--watched icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="white">$INFO[ListItem.Overlay]</texture>
						<visible>Window.IsVisible(Videos) + !ListItem.IsResumable</visible>
					</control>
					<!--resumable icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="white">OverlayWatching.png</texture>
						<visible>Window.IsVisible(Videos) + ListItem.IsResumable</visible>
					</control>
				</itemlayout>
				<focusedlayout condition="!Container.Content(Movies) + !Container.Content(Seasons) + !Container.Content(TVShows) + !Container.Content(Sets)" height="233.3" width="253">
					<!--background (fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>233</width>
						<height>221</height>
						<texture background="true" colordiffuse="black">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>233</width>
						<height>221</height>
						<texture background="true" colordiffuse="black">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/square shadow small.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--background (no fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>233</width>
						<height>221</height>
						<texture background="true" colordiffuse="button.nf">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</bordertexture>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--icon (fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>scale</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(color.500)]" background="true">$INFO[Listitem.Icon]</texture>
						<visible>!Container.Content(Episodes)</visible>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--icon (no fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>scale</aspectratio>
						<texture background="true">$INFO[Listitem.Icon]</texture>
						<visible>!Container.Content(Episodes)</visible>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--episode thumb (fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(color.500)]" background="true">$INFO[Listitem.Icon]</texture>
						<visible>Container.Content(Episodes)</visible>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--episode thumb (no fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>223</width>
						<height>211</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$INFO[Listitem.Icon]</texture>
						<visible>Container.Content(Episodes)</visible>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--label background-->
					<control type="image">
						<left>5</left>
						<top>144</top>
						<width>223</width>
						<height>73</height>
						<texture colordiffuse="black">backgrounds/bg_fade_2.png</texture>
					</control>
					<!--main label-->
					<control type="textbox">
						<left>20</left>
						<top>150</top>
						<width>167</width>
						<height>63</height>
						<font>secondary.info.big</font>
						<textcolor>white</textcolor>
						<selectedcolor>$INFO[Skin.String(color.500)]</selectedcolor>
						<align>left</align>
						<label>$INFO[ListItem.Label]</label>
						<autoscroll time="2000" delay="2000" repeat="2000" />
					</control>
					<!--overlay background-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>35</width>
						<height>35</height>
						<texture colordiffuse="$INFO[Skin.String(color.tertiary)]">backgrounds/white.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable</visible>
					</control>
					<!--watched icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">$INFO[ListItem.Overlay]</texture>
						<visible>Window.IsVisible(Videos) + !ListItem.IsResumable</visible>
					</control>
					<!--resumable icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">OverlayWatching.png</texture>
						<visible>Window.IsVisible(Videos) + ListItem.IsResumable</visible>
					</control>
				</focusedlayout>
				<itemlayout condition="Container.Content(Movies) | Container.Content(Seasons) | Container.Content(TVShows) | Container.Content(Sets)" height="350" width="257">
					<!--thumb bg (for fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>237</width>
						<height>336</height>
						<texture colordiffuse="black" background="true">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture>backgrounds/poster shadow small.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default) + String.Contains(ListItem.Art(poster),Default)</visible>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>237</width>
						<height>336</height>
						<texture colordiffuse="black" background="true">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture>backgrounds/poster shadow small.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default) + String.Contains(ListItem.Art(poster),Default)</visible>
					</control>
					<!--thumb (fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>227</width>
						<height>326</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(color.500)]" background="true">$VAR[PosterThumb]</texture>
						<visible>String.Contains(ListItem.Icon,Default) + String.Contains(ListItem.Art(poster),Default)</visible>
					</control>
					<!--thumb (not fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>237</width>
						<height>336</height>
						<aspectratio>stretch</aspectratio>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/poster shadow small.png</bordertexture>
				        <bordersize>7</bordersize>
						<visible>!String.Contains(ListItem.Icon,Default) | !String.Contains(ListItem.Art(poster),Default)</visible>
					</control>
					<!--overlay background-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>35</width>
						<height>35</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable</visible>
					</control>
					<!--watched icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="white">$INFO[ListItem.Overlay]</texture>
						<visible>Window.IsVisible(Videos) + !ListItem.IsResumable</visible>
					</control>
					<!--resumable icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="white">OverlayWatching.png</texture>
						<visible>Window.IsVisible(Videos) + ListItem.IsResumable</visible>
					</control>
				</itemlayout>
				<focusedlayout condition="Container.Content(Movies) | Container.Content(Seasons) | Container.Content(TVShows) | Container.Content(Sets)" height="350" width="237">
					<!--thumb bg (for fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>237</width>
						<height>336</height>
						<texture colordiffuse="black" background="true">backgrounds/white.png</texture>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</bordertexture>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>237</width>
						<height>336</height>
						<texture colordiffuse="black" background="true">backgrounds/white.png</texture>
						<bordersize>5</bordersize>
						<bordertexture>backgrounds/poster shadow small.png</bordertexture>
						<visible>String.Contains(ListItem.Icon,Default) + String.Contains(ListItem.Art(poster),Default)</visible>
					</control>
					<!--thumb (fallback)-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>227</width>
						<height>326</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(color.500)]" background="true">$VAR[PosterThumb]</texture>
						<visible>String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--thumb (not fallback)-->
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>237</width>
						<height>336</height>
						<aspectratio>stretch</aspectratio>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordersize>5</bordersize>
						<bordertexture colordiffuse="$INFO[Skin.String(color.500)]">backgrounds/white.png</bordertexture>
						<visible>!String.Contains(ListItem.Icon,Default)</visible>
					</control>
					<!--label background-->
					<control type="image">
						<left>5</left>
						<top>252</top>
						<width>227</width>
						<height>79</height>
						<texture colordiffuse="black">backgrounds/bg_fade_2.png</texture>
					</control>
					<!--main label-->
					<control type="textbox">
						<left>19</left>
						<top>263</top>
						<width>180</width>
						<height>63</height>
						<font>secondary.info.big</font>
						<textcolor>white</textcolor>
						<selectedcolor>$INFO[Skin.String(color.primary)]</selectedcolor>
						<align>left</align>
						<label>$INFO[ListItem.Label]</label>
						<autoscroll time="2000" delay="2000" repeat="2000" />
					</control>
					<!--overlay background-->
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>35</width>
						<height>35</height>
						<texture colordiffuse="$INFO[Skin.String(color.tertiary)]">backgrounds/white.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable</visible>
					</control>
					<!--watched icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">$INFO[ListItem.Overlay]</texture>
						<visible>Window.IsVisible(Videos) + !ListItem.IsResumable</visible>
					</control>
					<!--resumable icon-->
					<control type="image">
						<left>5</left>
						<top>7</top>
						<width>34</width>
						<height>30</height>
						<texture colordiffuse="$INFO[Skin.String(color.500)]">OverlayWatching.png</texture>
						<visible>Window.IsVisible(Videos) + ListItem.IsResumable</visible>
					</control>
				</focusedlayout>
			</control>
		   <!--main label-->
		   <control type="label">
		   <visible>Container.Content(Movies)</visible>
				<left>550</left>
				<top>770</top>
				<width>700</width>
				<height>92</height>
				<font>label</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
			    <label>$INFO[ListItem.Genre]</label>
			    <scroll>true</scroll>
			  </control>
			 <control type="label">
		     <visible>Window.IsVisible(MusicPlaylist) |  Container.Content(Songs) | Container.Content(Albums)</visible>
				<left>550</left>
				<top>770</top>
				<width>700</width>
				<height>92</height>
				<font>label</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
			    <label>$INFO[ListItem.Genre]</label>
			    <scroll>true</scroll>
				<visible>!Container.Content(Movies)</visible>
			  </control>  
			 <control type="group">
			  <visible>Container.Content(Tvshows) | Container.Content(Episodes)</visible>
			  <control type="label">
				  <left>690</left>
				  <top>797</top>
				  <width>360</width>
				  <height>35</height>
				  <font>font13</font>
				  <align>center</align>
				  <aligny>center</aligny>
				  <textcolor>white</textcolor>
				  <shadowcolor>black</shadowcolor>
				  <label>$INFO[ListItem.Studio]</label>
				  <visible>!Container.Content(Episodes)</visible>
			    </control>
			  <control type="label">
			  <visible>Container.Content(Tvshows) | Container.Content(Seasons)</visible>
				   <left>330</left>
				   <top>800</top>
				   <width>900</width>
				   <height>92</height>
				   <font>label</font>
				   <textcolor>white</textcolor>
				   <align>left</align>
				   <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Season,[COLOR ffefb415]Seasons: [/COLOR]]</label>
				   <visible>Container.Content(TVShows) | Container.Content(Seasons)</visible>
				   <scroll>true</scroll>
			    </control>
			    <control type="label">
			    <visible>Container.Content(Tvshows) | Container.Content(Seasons)</visible>
				   <left>1300</left>
				   <top>800</top>
				   <width>900</width>
				   <height>92</height>
				   <font>label</font>
				   <textcolor>white</textcolor>
				   <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Episode,[COLOR ffefb415]Episodes: [/COLOR]]</label>
				   <visible>Container.Content(Seasons) | Container.Content(TVShows)</visible>
				   <scroll>true</scroll>
			     </control>
			   <control type="label">
			   <visible>Container.Content(Episodes)</visible>
				  <left>400</left>
				  <top>775</top>
				  <width>900</width>
				  <height>92</height>
				  <font>label</font>
				  <textcolor>white</textcolor>
				  <align>center</align>
				  <aligny>center</aligny>
				  <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Status)]</label>
				  <scroll>true</scroll>
			   </control>
			  </control>
			  <!--scrollbar-->
			  <control type="scrollbar" id="600">
				<right>35</right>
				<top>5</top>
				<bottom>5</bottom>
				<onleft>500</onleft>
				<onright>2</onright>
				<orientation>vertical</orientation>
			</control>
		</control>
	</include>
</includes>